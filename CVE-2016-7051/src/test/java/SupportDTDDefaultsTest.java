
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.Map;

import com.fasterxml.jackson.dataformat.xml.*;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertThrows;

// for [databind-xml#211]
public class SupportDTDDefaultsTest 
{
    static HttpServer server;
    @BeforeEach
    public void setup() throws Exception {
        int port = 8001;
        server = HttpServer.create(new InetSocketAddress(port), 0);
        server.createContext("/", new HttpHandler() {
            public void handle(HttpExchange exchange) throws IOException {
                String response = "dummy";
                exchange.sendResponseHeaders(200, response.length());
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            }

        });
        server.setExecutor(null);
        server.start();

    }
    @AfterEach
    public void teardown() {
        server.stop(1);
    }
    @Test
    public void testDTDAttempt() throws Exception
    {
        XmlMapper mapper = new XmlMapper();
        String XML = "<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE foo SYSTEM 'http://127.0.0.1:8001' [ ]>\n"
                +"<foo/>";

        try {
            /*Map<String, String> info =*/ mapper.readValue(XML, Map.class);
            //At this point a GET request would have been sent to localhost:8001. You will see a Connection Refused in case you don't have a server listening there.
        } catch (Exception e){
            fail("Should not try to resolve external DTD subset: "+e);
        }
    }
}
